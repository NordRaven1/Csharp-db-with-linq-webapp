#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DiskManagement
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Disks")]
	public partial class DiskDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDisk(Disk instance);
    partial void UpdateDisk(Disk instance);
    partial void DeleteDisk(Disk instance);
    #endregion
		
		public DiskDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DisksConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DiskDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DiskDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DiskDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DiskDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Disk> Disks
		{
			get
			{
				return this.GetTable<Disk>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Disk]")]
	public partial class Disk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _disk_id;
		
		private string _location;
		
		private string _medium;
		
		private string _publisher;
		
		private string _album_name;
		
		private string _music_genre;
		
		private string _performer;
		
		private string _label;
		
		private int _songs_quantity;
		
		private decimal _price;
		
		private bool _hand_over;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondisk_idChanging(int value);
    partial void Ondisk_idChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnmediumChanging(string value);
    partial void OnmediumChanged();
    partial void OnpublisherChanging(string value);
    partial void OnpublisherChanged();
    partial void Onalbum_nameChanging(string value);
    partial void Onalbum_nameChanged();
    partial void Onmusic_genreChanging(string value);
    partial void Onmusic_genreChanged();
    partial void OnperformerChanging(string value);
    partial void OnperformerChanged();
    partial void OnlabelChanging(string value);
    partial void OnlabelChanged();
    partial void Onsongs_quantityChanging(int value);
    partial void Onsongs_quantityChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void Onhand_overChanging(bool value);
    partial void Onhand_overChanged();
    #endregion
		
		public Disk()
		{
			OnCreated();
		}

		public Disk(string place, string medium, string publisher,
			string album, string genre, string performer, string label,
			int songs, decimal price, bool handover)
        {
			this.location = place;
			this.medium = medium;
			this.publisher = publisher;
			this.album_name = album;
			this.music_genre = genre;
			this.performer = performer;
			this.label = label;
			this.songs_quantity = songs;
			this.price = price;
			this.hand_over = handover;
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disk_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int disk_id
		{
			get
			{
				return this._disk_id;
			}
			set
			{
				if ((this._disk_id != value))
				{
					this.Ondisk_idChanging(value);
					this.SendPropertyChanging();
					this._disk_id = value;
					this.SendPropertyChanged("disk_id");
					this.Ondisk_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medium", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string medium
		{
			get
			{
				return this._medium;
			}
			set
			{
				if ((this._medium != value))
				{
					this.OnmediumChanging(value);
					this.SendPropertyChanging();
					this._medium = value;
					this.SendPropertyChanged("medium");
					this.OnmediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisher", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string publisher
		{
			get
			{
				return this._publisher;
			}
			set
			{
				if ((this._publisher != value))
				{
					this.OnpublisherChanging(value);
					this.SendPropertyChanging();
					this._publisher = value;
					this.SendPropertyChanged("publisher");
					this.OnpublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string album_name
		{
			get
			{
				return this._album_name;
			}
			set
			{
				if ((this._album_name != value))
				{
					this.Onalbum_nameChanging(value);
					this.SendPropertyChanging();
					this._album_name = value;
					this.SendPropertyChanged("album_name");
					this.Onalbum_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_music_genre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string music_genre
		{
			get
			{
				return this._music_genre;
			}
			set
			{
				if ((this._music_genre != value))
				{
					this.Onmusic_genreChanging(value);
					this.SendPropertyChanging();
					this._music_genre = value;
					this.SendPropertyChanged("music_genre");
					this.Onmusic_genreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_performer", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string performer
		{
			get
			{
				return this._performer;
			}
			set
			{
				if ((this._performer != value))
				{
					this.OnperformerChanging(value);
					this.SendPropertyChanging();
					this._performer = value;
					this.SendPropertyChanged("performer");
					this.OnperformerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_label", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string label
		{
			get
			{
				return this._label;
			}
			set
			{
				if ((this._label != value))
				{
					this.OnlabelChanging(value);
					this.SendPropertyChanging();
					this._label = value;
					this.SendPropertyChanged("label");
					this.OnlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_songs_quantity", DbType="Int NOT NULL")]
		public int songs_quantity
		{
			get
			{
				return this._songs_quantity;
			}
			set
			{
				if ((this._songs_quantity != value))
				{
					this.Onsongs_quantityChanging(value);
					this.SendPropertyChanging();
					this._songs_quantity = value;
					this.SendPropertyChanged("songs_quantity");
					this.Onsongs_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(6,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hand_over", DbType="Bit NOT NULL")]
		public bool hand_over
		{
			get
			{
				return this._hand_over;
			}
			set
			{
				if ((this._hand_over != value))
				{
					this.Onhand_overChanging(value);
					this.SendPropertyChanging();
					this._hand_over = value;
					this.SendPropertyChanged("hand_over");
					this.Onhand_overChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
